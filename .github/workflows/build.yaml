# changeme 
# Change the following parts to your current installation
# - entire Docker Build steps accordingly to the amount of different versions or tags your building TRAINING_HUGO_ENV
#   - Tags
# - Helm Target Namespace
# - Name of K8S Deployment to trigger and namespace
# - URL that gets commented on the PR
# - Secrets
#   - QUAYIO_USERNAME and QUAYIO_TOKEN must be set accordingly to your registry, existing users must have access to the repos
#   - KUBECONFIG_TEST content of the Kubeconfig File, Account must have access to the k8s namespace. It's used in the helm steps
name: Build Training and Publish

on:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      -
        name: Set up npm for linting
        uses: actions/setup-node@v3
        with:
          node-version: '15.x'
      -
        name: Lint Markdown
        run: npm ci && npm run mdlint
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Quay.io Container Registry
        uses: docker/login-action@v2 
        with:
          registry: quay.io
          username: ${{ secrets.QUAYIO_USERNAME }}
          password: ${{ secrets.QUAYIO_TOKEN }}
      -
        name: Log in to the ghcr.io Container registry
        uses: docker/login-action@d398f07826957cd0a18ea1b059cf1207835e60bc
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      -
        name: Build Latest Version
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            quay.io/acend/cilium-basics-training:pr-${{ github.event.pull_request.number }}
            ghcr.io/acend/cilium-basics-training:pr-${{ github.event.pull_request.number }}
      -
        name: Run vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'quay.io/acend/cilium-basics-training:pr-${{ github.event.pull_request.number }}'
          format: 'table'
          output: 'trivy-results.txt'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os'
          severity: 'CRITICAL,HIGH'
      -
        name: Archive vulnerability scan results
        uses: actions/upload-artifact@v3
        with:
          name: trivy-results-build
          path: trivy-results.txt
      -
        name: Build Puzzle Version
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          build-args: |
            TRAINING_HUGO_ENV=puzzle
          push: true
          tags: |
            quay.io/acend/cilium-basics-training:pr-${{ github.event.pull_request.number }}-puzzle
            ghcr.io/acend/cilium-basics-training:pr-${{ github.event.pull_request.number }}-puzzle
      -
        name: Build Techlab Version
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          build-args: |
            TRAINING_HUGO_ENV=techlab
          push: true
          tags: |
            quay.io/acend/cilium-basics-training:pr-${{ github.event.pull_request.number }}-techlab
            ghcr.io/acend/cilium-basics-training:pr-${{ github.event.pull_request.number }}-techlab
      -
        name: 'Install Helm'
        uses: azure/setup-helm@v3
        with:
          version: v3.6.2
      -
        name: Install Kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: v1.21.2
      -
        name: Create KUBECONFIG
        env:
          KUBE_CONFIG: '${{ secrets.KUBECONFIG_TEST }}'
        run: |
          mkdir -p $HOME/.kube
          echo "$KUBE_CONFIG" > $HOME/.kube/config
      -
        name: Deploy Helm Release
        env:
          TRAINING_HELM_RELEASE: 'pr-${{ github.event.pull_request.number }}'
          TRAINING_NAMESPACE: 'acend-cilium-basics-training-test'
          TRAINING_VERSION: '${{ github.sha }}'
        run: |
          helm upgrade $TRAINING_HELM_RELEASE acend-training-chart --install --wait --kubeconfig $HOME/.kube/config  --namespace=$TRAINING_NAMESPACE --set=app.name=$HELM_RELEASE --set=app.version=$TRAINING_VERSION --repo=https://acend.github.io/helm-charts/ --values=helm-chart/values.yaml --atomic
      -
        name: Redeploy Deployments
        env:
          TRAINING_HELM_RELEASE: 'pr-${{ github.event.pull_request.number }}'
          TRAINING_HELM_NAME: 'cilium-basics-training'
          TRAINING_NAMESPACE: 'acend-cilium-basics-training-test'
        run: |
          kubectl rollout restart deployment/${TRAINING_HELM_RELEASE}-${TRAINING_HELM_NAME}-acend --kubeconfig $HOME/.kube/config --namespace $TRAINING_NAMESPACE
          kubectl rollout restart deployment/${TRAINING_HELM_RELEASE}-${TRAINING_HELM_NAME}-puzzle --kubeconfig $HOME/.kube/config --namespace $TRAINING_NAMESPACE
          kubectl rollout restart deployment/${TRAINING_HELM_RELEASE}-${TRAINING_HELM_NAME}-techlab --kubeconfig $HOME/.kube/config --namespace $TRAINING_NAMESPACE
      -
        name: Comment PR Environments in PR
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          message: |
           PR Environments: 
           * acend version <https://cilium-basics-pr-${{ github.event.pull_request.number }}.training.acend.ch>
           * puzzle version <https://cilium-basics-training-pr-${{ github.event.pull_request.number }}.k8s.puzzle.ch>
           * techlab version <https://cilium-techlab-pr-${{ github.event.pull_request.number }}.training.acend.ch>
